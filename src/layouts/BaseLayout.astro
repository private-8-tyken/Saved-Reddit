---
// src/layouts/BaseLayout.astro
// Base layout with title, CSS, and optional auth check
const { title = 'Saved Reddit', requiresAuth = true } = Astro.props;
const BASE = import.meta.env.BASE_URL || "/";

const MEDIA_BASE = import.meta.env.PUBLIC_MEDIA_BASE || "";
let MEDIA_ORIGIN = "";
try { MEDIA_ORIGIN = MEDIA_BASE ? new URL(MEDIA_BASE).origin : ""; } catch {}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- âœ… CSS path now robust in dev and on GitHub Pages -->
    <link rel="stylesheet" href={`${BASE}styles/global.css`} />

    <!-- Speed up first image connection setup -->
    <link rel="preconnect" href="https://preview.redd.it" crossorigin>
    <link rel="preconnect" href="https://i.redd.it" crossorigin>
    {MEDIA_ORIGIN && <link rel="preconnect" href={MEDIA_ORIGIN} crossorigin />}
  </head>
  <body>
    {requiresAuth && (
      <script is:inline data-base={BASE}>
        (function(){
          try {
            // Read the base from the script's data attribute (no JSON stringify needed)
            var BASE = (document.currentScript && document.currentScript.dataset && document.currentScript.dataset.base) || '/';
            var norm = function(s){ return s.endsWith('/') ? s : s + '/'; };
            var isLogin = norm(location.pathname).endsWith(norm(BASE + 'login'));
            var authed = (sessionStorage.getItem('authed') === '1');
            if (!isLogin && !authed) location.replace(BASE + 'login');
          } catch (e) {}
        })();
      </script>
    )}
    <slot />
  </body>
</html>
