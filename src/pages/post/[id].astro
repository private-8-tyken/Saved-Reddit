---
import "../[id].css";
import { BASE } from "../../lib/base";
import fs from "node:fs/promises";
import PostDetail from "../../components/PostDetail.jsx";

// Statically generate paths from the JSON files already copied into public/
export async function getStaticPaths() {
    const dir = new URL("../../../public/data/posts/", import.meta.url);
    let files: string[] = [];
    try {
        files = await fs.readdir(dir);
    } catch {}
    return files
        .filter((f) => f.endsWith(".json"))
        .map((f) => ({ params: { id: f.replace(/\.json$/, "") } }));
}

const { id } = Astro.params;

// Build-time read of the JSON for SEO meta (avoids double-fetch at runtime)
let post: any = null;
try {
    const file = new URL(
        `../../../public/data/posts/${id}.json`,
        import.meta.url,
    );
    const raw = await fs.readFile(file, "utf8");
    post = JSON.parse(raw);
} catch {}

const base = import.meta.env.BASE_URL;
const title = post?.title || "Post";
const desc = (post?.selftext || "").slice(0, 150);
const ogImage =
    (post?.media?.items?.[0]?.thumbnail &&
        `${base}${String(post.media.items[0].thumbnail).replace(/^\/+/, "")}`) ||
    `${base}og.png`;
---

<html lang="en">
    <head>
        <script is:inline>
            const __b = "/Saved-Reddit/";
            if (
                sessionStorage.getItem("site_authed") !== "1" &&
                localStorage.getItem("site_authed") !== "1"
            ) {
                location.replace(__b + "login");
            }
        </script>

        <meta charset="utf-8" />
        <title>{title}</title>
        <meta name="viewport" content="width=device-width" />
        <meta name="description" content={desc} />
        <meta property="og:title" content={title} />
        <meta property="og:description" content={desc} />
        <meta property="og:type" content="article" />
        <meta property="og:image" content={ogImage} />
        <meta name="twitter:card" content="summary_large_image" />
    </head>
    <body>
        <PostDetail id={id} client:only="react" />
    </body>
</html>
