---
// src/pages/post/[id].astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import Header from "../../components/Header.astro";
import PostPage from "../../components/PostPage.jsx";

export async function getStaticPaths() {
    const fs = await import("node:fs/promises");
    const path = await import("node:path");

    const ROOT = process.cwd();
    const manifestPath = path.resolve(
        ROOT,
        "public/data/indexes/posts-manifest.json",
    );
    let ids = [];

    // Try manifest first
    try {
        const raw = await fs.readFile(manifestPath, "utf8");
        const manifest = JSON.parse(raw);
        ids = manifest.map((p) => String(p.id)).filter(Boolean);
    } catch {
        // Fallback: scan public/data/posts
        try {
            const postsDir = path.resolve(ROOT, "public/data/posts");
            const files = await fs.readdir(postsDir);
            ids = files
                .filter((f) => f.endsWith(".json"))
                .map((f) => path.parse(f).name);
        } catch {}
    }

    // Deduplicate just in case
    ids = Array.from(new Set(ids));

    return ids.map((id) => ({
        params: { id },
        props: { id }, // pass to the component
    }));
}

const { id } = Astro.props; // from getStaticPaths props
---

<BaseLayout title={`Post â€” ${id}`} requiresAuth={true}>
    <Header showFiltersButton={false} />
    <PostPage id={id} client:load />
</BaseLayout>
