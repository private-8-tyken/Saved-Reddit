---
import Base from "../../layouts/BaseLayout.astro";
import PostMeta from "../../components/PostMeta.astro";
import LinkPreview from "../../components/LinkPreview.astro";

const { id } = Astro.params;
const post = await (await fetch(`/data/posts/${id}.json`)).json();
---
<Base title={post.title}>
  <article class="mx-auto max-w-3xl p-4">
    <h1 class="text-2xl font-semibold mb-1">{post.title}</h1>
    <PostMeta p={post} />
    {post.selftext && (<div class="prose prose-invert mt-4 whitespace-pre-wrap">{post.selftext}</div>)}

    {/* Media policy: render only LINK preview for now */}
    {post.link_domain && post.url && (
      <div class="mt-4"><LinkPreview domain={post.link_domain} url={post.url} title={post.title} /></div>
    )}

    <section class="mt-8">
      <h2 class="text-lg font-medium mb-2">Comments</h2>
      <div id="comments" />
    </section>
  </article>
  <script>
    // Minimal collapsible tree rendering for comments (client-side)
    (async function(){
      const res = await fetch(`/data/posts/${location.pathname.split('/').pop()}.json`);
      const post = await res.json();
      const root = document.getElementById('comments');
      const render = (c) => {
        const el = document.createElement('details');
        el.open = true;
        el.className = 'mb-2 border border-white/10 rounded';
        const sum = document.createElement('summary');
        sum.className = 'px-3 py-2 text-sm bg-white/5';
        sum.textContent = `u/${c.author || 'unknown'} â€¢ ${c.score ?? 0}`;
        const body = document.createElement('div');
        body.className = 'px-3 py-2 text-sm whitespace-pre-wrap';
        body.textContent = c.body || '';
        el.appendChild(sum); el.appendChild(body);
        (c.replies||[]).forEach(r => el.appendChild(render(r)));
        return el;
      };
      (post.comments||[]).forEach(c => root.appendChild(render(c)));
    })();
  </script>
</Base>
